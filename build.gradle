buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // Spring Boot Gradle Plugin を使用
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.4.2'
        // Google App Engine Gradle plugin を使用
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.4.1'
    }
}


plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
}

apply plugin: 'com.google.cloud.tools.appengine'

group = 'com.fooqoo56.kyo-go-finder.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'com.google.appengine:appengine-api-1.0-sdk:+',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-gcp-starter-data-firestore:1.2.6.RELEASE',
            "org.springframework.boot:spring-boot-starter-validation"
    )
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.spockframework:spock-core:1.3-groovy-2.5',
            'org.spockframework:spock-spring:2.0-groovy-3.0',
            'cglib:cglib-nodep:3.3.0'
    )
}

test {
    testLogging {
        // テスト時の標準出力と標準エラー出力を表示する
        showStandardStreams true
        // イベントを出力する (TestLogEvent)
        events 'started', 'skipped', 'passed', 'failed'
    }
}

// Google App Engine タスクの設定
appengine {
    // デプロイ時の設定
    // GCLOUD_CONFIG を指定しておくと
    // gcloud config で設定しているプロジェクト情報がセットされる
    deploy {
        // デプロイ先の Google Cloud Project ID
        projectId = "kyo-go-finder"
        // デプロイによって反映される Web アプリのバージョン
        // 指定しなければ新しく生成される
        version = "1-0-0"
    }
}

// デプロイ前にテストを実行
appengineDeploy.dependsOn test
appengineStage.dependsOn test